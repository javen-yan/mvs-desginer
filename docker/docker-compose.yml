version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: mvs_designer
      POSTGRES_USER: mvs_user
      POSTGRES_PASSWORD: mvs_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mvs_user -d mvs_designer"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  mvs-designer:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ../static:/app/static
      - ../logs:/app/logs
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=false
      - DATABASE_URL=postgresql://mvs_user:mvs_password@postgres:5432/mvs_designer
      - SECRET_KEY=your-production-secret-key-here
      - JWT_SECRET_KEY=your-jwt-secret-key-here
      - USE_GPU=true
      - CUDA_VISIBLE_DEVICES=0
      - MESHROOM_PATH=/opt/meshroom/meshroom_batch
      # S3 Configuration (uncomment and set your values)
      # - AWS_ACCESS_KEY_ID=your-aws-access-key
      # - AWS_SECRET_ACCESS_KEY=your-aws-secret-key
      # - AWS_REGION=us-east-1
      # - S3_BUCKET_NAME=your-s3-bucket
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ../static:/var/www/static
    depends_on:
      - mvs-designer
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  static_data:
  logs_data: